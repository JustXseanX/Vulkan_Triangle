//-------------------------------------------------------------------------------------------------
// File : asvkCommandList.h
// Desc : Command List Module.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------
#pragma once

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <asvkDevice.h>


namespace asvk {

///////////////////////////////////////////////////////////////////////////////////////////////////
// CommandList class
///////////////////////////////////////////////////////////////////////////////////////////////////
class CommandList
{
    //=============================================================================================
    // list of friend classes and methods.
    //=============================================================================================
    /* NOTHING */

public:
    //=============================================================================================
    // public variables.
    //=============================================================================================
    /* NOHTING */

    //=============================================================================================
    // public methods.
    //=============================================================================================

    //---------------------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------------------------
    CommandList();

    //---------------------------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //---------------------------------------------------------------------------------------------
    ~CommandList();

    //---------------------------------------------------------------------------------------------
    //! @brief      初期化処理です.
    //!
    //! @param[in]      pDeviceMgr      デバイスマネージャです.
    //! @param[in]      queueType       キュータイプです.
    //! @param[in]      createFlags     コマンドプール作成フラグです.
    //! @param[in]      level           コマンドバッファレベルです.
    //! @param[in]      count           コマンドバッファの数です.
    //! @retval true    初期化に成功.
    // !@retval false   初期化に失敗.
    //---------------------------------------------------------------------------------------------
    bool Init(
        DeviceMgr*                  pDeviceMgr,
        QueueType                   queueType,
        VkCommandPoolCreateFlags    createFlags,
        VkCommandBufferLevel        level,
        uint32_t                    count);

    //---------------------------------------------------------------------------------------------
    //! @brief      終了処理です.
    //!
    //! @param[in]      pDeviceMgr  デバイスマネージャです.
    //---------------------------------------------------------------------------------------------
    void Term(DeviceMgr* pDeviceMgr);

    //---------------------------------------------------------------------------------------------
    //! @brief      コマンドバッファを先頭に戻し，記録を開始します.
    //---------------------------------------------------------------------------------------------
    bool Reset();

    //---------------------------------------------------------------------------------------------
    //! @breif      コマンドバッファへの記録を終了し，バッファインデックスを更新します.
    //---------------------------------------------------------------------------------------------
    bool Close();

    //---------------------------------------------------------------------------------------------
    //! @brief      コマンドプールを取得します.
    //!
    //! @return     コマンドプールを返却します.
    //---------------------------------------------------------------------------------------------
    VkCommandPool GetCommandPool() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      コマンドバッファを取得します.
    //!
    //! @param[in]      index       コマンドバッファインデックス.
    //! @return     コマンドバッファを返却します.
    //---------------------------------------------------------------------------------------------
    VkCommandBuffer GetCommandBuffer(uint32_t index) const;

    //---------------------------------------------------------------------------------------------
    //! @brief      現在のバッファインデックスに対応するコマンドバッファを取得します.
    //!
    //! @return     現在のバッファインデックスに対応するコマンドバッファを返却します.
    //---------------------------------------------------------------------------------------------
    VkCommandBuffer GetCurrentCommandBuffer() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      バッファインデックスを取得します.
    //!
    //! @return     バッファインデックスを返却します.
    //---------------------------------------------------------------------------------------------
    uint32_t GetBufferIndex() const;

private:
    //=============================================================================================
    // private variables.
    //=============================================================================================
    VkCommandPool                   m_CommandPool;      //!< コマンドプールです.
    std::vector<VkCommandBuffer>    m_CommandBuffers;   //!< コマンドバッファです.
    uint32_t                        m_BufferIndex;      //!< コマンドバッファインデックスです.

    //=============================================================================================
    // private methods.
    //=============================================================================================
    /* NOTHING */
};

} // namespace asvk

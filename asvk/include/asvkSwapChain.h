//-------------------------------------------------------------------------------------------------
// File : asvkSwapChain.h
// Desc : Swap Chain Module.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------
#pragma once

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <asvkTypedef.h>
#include <asvkDevice.h>
#include <asvkCommandList.h>
#include <vector>


namespace asvk {

///////////////////////////////////////////////////////////////////////////////////////////////////
// SwapChainDesc structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct SwapChainDesc
{
    uint32_t        Width;          //!< 横幅です.
    uint32_t        Height;         //!< 縦幅です.
    VkFormat        Format;         //!< フォーマットです.
    VkColorSpaceKHR ColorSpace;     //!< カラースペースです.
    uint32_t        BufferCount;    //!< スワップチェイン数です.
    HINSTANCE       hInstance;      //!< インスタンスハンドルです
    HWND            hWnd;           //!< ウィンドウハンドルです.
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// SwapChain class
///////////////////////////////////////////////////////////////////////////////////////////////////
class SwapChain
{
    //=============================================================================================
    // list of friend classes ans methods.
    //=============================================================================================
    /* NOTHING */

public:
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Buffer structure
    ///////////////////////////////////////////////////////////////////////////////////////////////
    struct Buffer
    {
        VkImage                 Image;  //!< イメージです.
        VkImageView             View;   //!< イメージビューです.
    };

    //=============================================================================================
    // public variables.
    //=============================================================================================
    /* NOTHING */

    //=============================================================================================
    // public methods.
    //=============================================================================================

    //---------------------------------------------------------------------------------------------
    //! @brief      コンストラクタ.
    //---------------------------------------------------------------------------------------------
    SwapChain();

    //---------------------------------------------------------------------------------------------
    //! @breif      デストラクタです.
    //---------------------------------------------------------------------------------------------
    ~SwapChain();

    //---------------------------------------------------------------------------------------------
    //! @brief      初期化処理です.
    //!
    //! @param[in]      pDeviceMgr      デバイスマネージャです.
    //! @param[in]      commandBuffer   コマンドバッファです.
    //! @param[in]      pDesc           スワップチェインの設定です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //---------------------------------------------------------------------------------------------
    bool Init(DeviceMgr* pDeviceMgr, VkCommandBuffer commandBuffer, const SwapChainDesc* pDesc);

    //---------------------------------------------------------------------------------------------
    //! @brief      終了処理です.
    //---------------------------------------------------------------------------------------------
    void Term(DeviceMgr* pDevice);

    //---------------------------------------------------------------------------------------------
    //! @brief      表示します.
    //!
    //! @param[in]      timeout         タイムアウト時間()
    //---------------------------------------------------------------------------------------------
    void Present(uint64_t timeout);

    //---------------------------------------------------------------------------------------------
    //! @brief      バッファ番号を取得します.
    //!
    //! @return     バッファ番号を返却します.
    //---------------------------------------------------------------------------------------------
    uint32_t GetBufferIndex() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      スワップチェインを取得します.
    //!
    //! @return     スワップチェインを返却します.
    //---------------------------------------------------------------------------------------------
    VkSwapchainKHR GetSwapChain() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      サーフェイスを取得します.
    //!
    //! @return     サーフェイスを返却します.
    //---------------------------------------------------------------------------------------------
    VkSurfaceKHR GetSurface() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      セマフォを取得します.
    //!
    //! @return     セマフォを返却します.
    //---------------------------------------------------------------------------------------------
    VkSemaphore GetSemaphore() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      バッファを取得します.
    //!
    //! @param[in]      index       バッファ番号です.
    //! @return     バッファを返却します.
    //---------------------------------------------------------------------------------------------
    Buffer const * GetBuffer(uint32_t index) const;

    //---------------------------------------------------------------------------------------------
    //! @brief      現在のバッファを取得します.
    //!
    //! @return     現在のバッファを返却します.
    //---------------------------------------------------------------------------------------------
    Buffer const * GetCurrentBuffer() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      イメージサブリソースレンジを取得します.
    //!
    //! @return     イメージサブリソースレンジを返却します.
    //---------------------------------------------------------------------------------------------
    VkImageSubresourceRange GetRange() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      構成設定を取得します.
    //!
    //! @return     構成設定を返却します.
    //---------------------------------------------------------------------------------------------
    const SwapChainDesc& GetDesc() const;

private:
    //=============================================================================================
    // private variables.
    //=============================================================================================
    uint32_t                m_BufferIndex;      //!< バッファインデックスです.
    std::vector<Buffer>     m_Buffers;          //!< バッファです.
    VkSurfaceKHR            m_Surface;          //!< サーフェイスです.
    VkSwapchainKHR          m_SwapChain;        //!< スワップチェインです.
    VkDevice                m_Device;           //!< デバイスです.
    VkSemaphore             m_Semaphore;        //!< セマフォです.
    Queue*                  m_pQueue;           //!< キューへのポインタです.
    VkImageSubresourceRange m_Range;            //!< イメージサブリソースレンジです.
    SwapChainDesc           m_Desc;             //!< 構成設定です.

    //=============================================================================================
    // private methods.
    //=============================================================================================
    /* NOTHING */
};

} // namespace asvk
